from configparser import NoOptionError
import csv
from typing import Generator

import UserFactory
class User:


    fields = [
        'user_id',  # unique
        'first_name',
        'last_name',
        'email',  # unique
        'phone_number',  # unique
        'date_of_birth',
        'address',
        'city',
        'state',
        'country',
        'zip_code',
        'username',  # unique
        'password',
        'account_created',
        'is_active',

    ]
    num_users:int=1000000
    file_name:str='generated_users.csv'


    @classmethod
    def __init__(cls,umn_users:int,file_name:str)->None:
        cls.num_users = umn_users
        cls.file_name = file_name


    """
    add first row in csv file , its contain name of fields

    """

    @classmethod
    def addHeaderFieldsToCsvFile(cls)-> None:

        with open(cls.file_name, 'w', newline='') as csvfile:
            writer = csv.writer(csvfile)
            writer.writerow(cls.fields)

    """
       add users generated by Faker module to csv file 
    """
    @classmethod
    def addGeneratedUserWithFakerToCsvFile(cls):
        model:callable=UserFactory.UserFactory(cls.num_users,cls.file_name)
        users:Generator=model.createUserWithFakeData()

        for user in users:
            with open(f'{cls.file_name}', 'a') as csvfile:
                writer = csv.writer(csvfile, delimiter='|', quoting=csv.QUOTE_ALL)
                writer.writerow(user)




